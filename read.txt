aplication.propeties

// aqui vamos a setear cosas para mapeada con BD
vamos a autogenerar la BD
spring.jpa.hibernate.ddl-auto=update

el puerto
server.port=8080

es opcional para que no se buguee, 
spring.config.import=optional:file:.env[.properties]

// esto se usa asi para que no quede vulnerable las pass y user, 
// para eso es el entorno virtual
spring.datasource.url= ${SPRING_DATASOURCE_URL}


########################################################################
.ENV

jdbc = es lo que nosotros usamso para hacer la conexion, es un libreria

el puesto defaul
localhost:5432


.env.template
sirve de ejemplo para que otra persona lo vea publico

############################

hatsa aqui ya todo sirve, ahora necesitamos de docker para quese pueda consumir una _BD

alt + shift flecha = para seleeciona varias lineas de codigo

con alt = seleciono varioa renglones, y pego todos multiples

abrimos Duker y la terminal 
    escribo: docker-compose up -d
    hubo un error porque tenia enviroment mal escrito
    con eso vamos a ducker y ya esta jalando al 100%

############################

docker

sirve para hacr imagenes de BD de SQL que funcionen en cualquier lugar

vamos aqui https://hub.docker.com/_/postgres

en este archivo tenia un error
    application.properties
        el purto decia 
            server.port=8080


#########################

TABLE PLUS

creamos nuevo > new postgresSQL
    ingresamos todos los datos de la BD que hicimos en .ENV
    es la ruta 127.0.0.1
    port es el mismo que usameo en el YML = 5432
    nombre = el que quieramos
    Darle a Test pero no jalo porque l doker no jalo en un inicio

###############
// 06:40:14

// 06 : 47 : 00

// 06:51 :30


// 06:58:24

//07:04:23

//07:13:33
